//
// Generated by @himenon/openapi-typescript-code-generator v0.27.1
//
// OpenApi : 3.1.0
//
//

export namespace Schemas {
  export interface Theme {
    id: number;
    dark_mode: boolean;
  }
  export interface Tag {
    id: number;
    name: string;
  }
  export interface Reaction {
    id: number;
    emoji_name: string;
    user: Schemas.User;
    livestream: Schemas.Livestream;
    created_at: number;
  }
  export interface User {
    /** Unique identifier for the given user. */
    id: number;
    name: string;
    display_name: string;
    description: string;
    created_at?: number;
    updated_at?: number;
    is_popular: boolean;
    theme: Schemas.Theme;
  }
  export interface Livestream {
    id?: number;
    owner?: Schemas.User;
    tags?: Schemas.Tag[];
    title?: string;
    description?: string;
    playlist_url?: string;
    thumbnail_url?: string;
    start_at?: number;
    end_at?: number;
    created_at?: number;
    updated_at?: number;
  }
  /** 上位チャットの投稿 */
  export interface Livecomment {
    id?: number;
    user?: Schemas.User;
    livestream?: Schemas.Livestream;
    comment?: string;
    tip?: number;
    created_at?: number;
    updated_at?: number;
  }
  export interface LivestreamStatistics {
    rank: number;
    viewers_count: number;
    total_reactions: number;
    total_reports: number;
    max_tip: number;
  }
  export interface UserStatistics {
    rank: number;
    viewers_count: number;
    total_reactions: number;
    total_livecomments: number;
    total_tip: number;
    favorite_emoji: string;
  }
  export interface LivecommentReport {
    id?: number;
    reporter?: Schemas.User;
    livecomment?: Schemas.Livecomment;
    created_at?: number;
    updated_at?: number;
  }
  export interface LivestreamNgWord {
    id: number;
    livestream_id: number;
    word: string;
    created_at: number;
  }
  export interface Icon {
    id: number;
  }
}
export namespace Responses {
  /** Example response */
  export namespace GetTag {
    export interface Content {
      'application/json': {
        tags?: Schemas.Tag[];
      };
    }
  }
  /** Example response */
  export namespace GetUser {
    export interface Content {
      'application/json': Schemas.User;
    }
  }
  /** Example response */
  export namespace GetUserTheme {
    export interface Content {
      'application/json': Schemas.Theme;
    }
  }
  /** Example response */
  export namespace GetUserStatistics {
    export interface Content {
      'application/json': Schemas.UserStatistics;
    }
  }
  /** Example response */
  export namespace GetLivestreams {
    export interface Content {
      'application/json': Schemas.Livestream[];
    }
  }
  /** Example response */
  export namespace GetLivestream {
    export interface Content {
      'application/json': Schemas.Livestream;
    }
  }
  /** Example response */
  export namespace GetLivestreamStatistics {
    export interface Content {
      'application/json': Schemas.LivestreamStatistics;
    }
  }
  /** Example response */
  export namespace GetLivecomments {
    export interface Content {
      'application/json': Schemas.Livecomment[];
    }
  }
}
export namespace RequestBodies {
  export namespace PostLivestreamModerate {
    export interface Content {
      'application/json': {
        ng_word?: string;
      };
    }
  }
  export namespace PostUser {
    export interface Content {
      'application/json': {
        name?: string;
        display_name?: string;
        description?: string;
        password?: string;
        theme?: {
          dark_mode?: boolean;
        };
      };
    }
  }
  export namespace Login {
    export interface Content {
      'application/json': {
        username?: string;
        password?: string;
      };
    }
  }
  export namespace PostReaction {
    export interface Content {
      'application/json': {
        emoji_name?: string;
      };
    }
  }
  export namespace PostLivecomment {
    export interface Content {
      'application/json': {
        comment?: string;
        tip?: number;
      };
    }
  }
  export namespace ReserveLivestream {
    export interface Content {
      'application/json': {
        tags?: number[];
        title?: string;
        description?: string;
        collaborators?: number[];
        start_at?: number;
        end_at?: number;
      };
    }
  }
  export namespace PostIcon {
    export interface Content {
      'application/json': {
        image?: string;
      };
    }
  }
}
