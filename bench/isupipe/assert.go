package isupipe

// FIXME: 統計情報に誤りがない (ある値以上であることには確信を持てるが、ある値以下であることに確信を持てない).
//        極端なことを言えば、INT_MAX的な値をすべての統計値に突っ込んでおけばすり抜けられる
//        売上はFinalCheckで見られるので、ここで見なくていい。
//        ここで見たいのは、各種統計情報をサボらず計算しているかどうか
//        pretestで、すべての統計値が0であることをチェックする (ランダムな回数叩く。そうすると、webapp側はいつのリクエストがpretestのものかわからない)
//        また、pretestで実施した内容に基づいて統計値がピタリ一致することをチェックする (何かしらの固定値ではなくきちんと計算処理が行われている)
//        pretestで検証するデータ、データ数はランダム性をもたせる
//        以後、数値が以上であることを検証する

func assertLivestreamStatistics() {

}

func assertUserStatistics() {

}

// 予約エンドポイント
func assertCollaboratorLivestream() {
	// FIXME: 予約が被っているコラボ配信者を指定して正しくエラーが返ってくるかチェック. 予約エンドポイントのユーザをコラボ対象にして
	// 適当な配信者を選定して、その配信者のコラボ配信者として指定したときにちゃんとエラーが返ってくるか調べる
	// このとき、ColdReservationを選ぶ
	// ただ、他の予約が割り込んで予約はできるがコラボ配信者と被ってダメエラーではなく、予約がそもそもダメエラーが返ってきたときに正しく判定できてないことになる
	//

}

// 予約エンドポイント
func assertSearchLivestream() {

}

// FIXME: いくらか画面表示内容に問題がないことをチェックする

// moderateにより登録されたNGワードが含まれるコメントが残っていたら失格
// FIXME: ベンチ側では、ngワードのmoderate後に含まれる投稿を見つけたら失格扱いにする
func assertModeratedComment() {
	// NGワード一覧取得

	// １つづつ検査
}
